{"version":3,"sources":["../../src/bus/message_dispatcher.js"],"names":["_dispatchingListeners","_dispatchFailedListeners","_dispatchedListeners","message","name","type","register","_onDispatching","handlers","forEach","CLS","handler","run","evt","data","_onDispatched","err","_onDispatchFaild","clear","dispatchingListener","dispatchedListener","dispatchFailedListener","push","event","listener","e"],"mappings":";;;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;;AAGE,oBAAa;AAAA;;AACX,SAAKA,qBAAL,GAA6B,EAA7B;AACA,SAAKC,wBAAL,GAAgC,EAAhC;AACA,SAAKC,oBAAL,GAA4B,EAA5B;AACD;;AAED;;;;;6BACSC,O,EAAQ;AAAA;;AACf,UAAI,CAAC,qBAASA,QAAQC,IAAjB,CAAD,IAA2B,CAAC,qBAASD,QAAQE,IAAjB,CAA5B,IACDF,QAAQE,IAAR,IAAgB,OAAhB,IAA2BF,QAAQE,IAAR,IAAgB,SAD9C,EACyD;AACvD,wBAAI,MAAJ;AACA;AACD;AACD,UAAIC,WAAWA,SAASH,QAAQE,IAAR,GAAa,SAAtB,CAAf;AACA,UAAI,CAACC,QAAL,EAAc;AACZ,wBAAI,OAAKH,QAAQE,IAAb,GAAkB,QAAtB;AACA;AACD;AACD,WAAKE,cAAL;AACA,UAAIC,WAAWF,SAASH,QAAQC,IAAjB,KAA0B,EAAzC;AACAI,eAASC,OAAT,CAAiB,gBAAM;AACrB,YAAIC,MAAM,oBAASL,IAAT,CAAV;AACA,YAAI,CAACK,GAAD,IAAQ,CAAC,uBAAWA,GAAX,CAAb,EAA8B;AAC9B,YAAIC,UAAU,IAAID,GAAJ,EAAd;AACA,YAAI,CAACC,OAAD,IAAY,CAAC,uBAAWA,QAAQC,GAAnB,CAAjB,EAA0C;AAC1C,YAAIC,MAAM;AACRV,0BADQ;AAERO,kBAFQ;AAGRC;AAHQ,SAAV;AAKA,wBAAI,SAAOR,QAAQC,IAAnB;AACA,cAAKG,cAAL,CAAoBM,GAApB;AACA,YAAG;AACDF,kBAAQC,GAAR,CAAYT,QAAQW,IAAR,IAAgB,EAA5B;AACA,gBAAKC,aAAL,CAAmBF,GAAnB;AACA,0BAAI,SAAOV,QAAQC,IAAf,GAAoB,IAAxB;AACD,SAJD,CAIC,OAAMY,GAAN,EAAU;AACTH,cAAIG,GAAJ,GAAUA,GAAV;AACA,0BAAI,SAAOb,QAAQC,IAAf,GAAoB,KAApB,GAA0BY,GAA9B;AACA,gBAAKC,gBAAL,CAAsBJ,GAAtB;AACD;AACF,OArBD;AAsBD;;;4BAEM;AACL,WAAKb,qBAAL,CAA2BkB,KAA3B;AACA,WAAKjB,wBAAL,CAA8BiB,KAA9B;AACA,WAAKhB,oBAAL,CAA0BgB,KAA1B;AACD;;;gCAEWC,mB,EAAqBC,kB,EAAoBC,sB,EAAuB;AAC1E,UAAI,uBAAWD,kBAAX,CAAJ,EACE,KAAKpB,qBAAL,CAA2BsB,IAA3B,CAAgCF,kBAAhC;AACF,UAAI,uBAAWA,kBAAX,CAAJ,EACE,KAAKlB,oBAAL,CAA0BoB,IAA1B,CAA+BF,kBAA/B;AACF,UAAI,uBAAWC,sBAAX,CAAJ,EACE,KAAKpB,wBAAL,CAA8BqB,IAA9B,CAAmCD,sBAAnC;AACH;;;mCAEcE,K,EAAM;AACnB,WAAKvB,qBAAL,CAA2BS,OAA3B,CAAmC,oBAAU;AAC3C,YAAG;AACDe,mBAASD,KAAT;AACD,SAFD,CAEC,OAAME,CAAN,EAAQ;AACP,0BAAIA,CAAJ;AACD;AACF,OAND;AAOD;;;qCAEgBF,K,EAAM;AACrB,WAAKF,sBAAL,CAA4BZ,OAA5B,CAAoC,oBAAU;AAC5C,YAAG;AACDe,mBAASD,KAAT;AACD,SAFD,CAEC,OAAME,CAAN,EAAQ;AACP,0BAAIA,CAAJ;AACD;AACF,OAND;AAOD;;;kCAEaF,K,EAAM;AAClB,WAAKH,kBAAL,CAAwBX,OAAxB,CAAgC,oBAAU;AACxC,YAAG;AACDe,mBAASD,KAAT;AACD,SAFD,CAEC,OAAME,CAAN,EAAQ;AACP,0BAAIA,CAAJ;AACD;AACF,OAND;AAOD","file":"message_dispatcher.js","sourcesContent":["import {log,isFunction,isString} from '../utils';\r\nimport {_require} from '../core';\r\nimport register from '../register';\r\n\r\nexport default class {\r\n  constructor(){\r\n    this._dispatchingListeners = [];\r\n    this._dispatchFailedListeners = [];\r\n    this._dispatchedListeners = [];\r\n  }\r\n\r\n  // message = {name,type,data}\r\n  dispatch(message){\r\n    if (!isString(message.name) || !isString(message.type) ||\r\n      (message.type != 'event' && message.type != 'command')){\r\n      log('消息无效');\r\n      return;\r\n    }\r\n    let register = register[message.type+'handler'];\r\n    if (!register){\r\n      log('消息'+message.type+'类型尚未支持');\r\n      return;\r\n    }\r\n    this._onDispatching();\r\n    let handlers = register[message.name] || [];\r\n    handlers.forEach(type=>{\r\n      var CLS = _require(type);\r\n      if (!CLS || !isFunction(CLS)) return;\r\n      var handler = new CLS();\r\n      if (!handler || !isFunction(handler.run)) return;\r\n      let evt = {\r\n        message,\r\n        CLS,\r\n        handler\r\n      };\r\n      log('分发消息'+message.name);\r\n      this._onDispatching(evt);\r\n      try{\r\n        handler.run(message.data || {});\r\n        this._onDispatched(evt);\r\n        log('分发消息'+message.name+'完成');\r\n      }catch(err){\r\n        evt.err = err;\r\n        log('分发消息'+message.name+'失败，'+err);\r\n        this._onDispatchFaild(evt);\r\n      }\r\n    });\r\n  }\r\n\r\n  clear(){\r\n    this._dispatchingListeners.clear();\r\n    this._dispatchFailedListeners.clear();\r\n    this._dispatchedListeners.clear();\r\n  }\r\n\r\n  addListener(dispatchingListener, dispatchedListener, dispatchFailedListener){\r\n    if (isFunction(dispatchedListener))\r\n      this._dispatchingListeners.push(dispatchedListener);\r\n    if (isFunction(dispatchedListener))\r\n      this._dispatchedListeners.push(dispatchedListener);\r\n    if (isFunction(dispatchFailedListener))\r\n      this._dispatchFailedListeners.push(dispatchFailedListener);\r\n  }\r\n\r\n  _onDispatching(event){\r\n    this._dispatchingListeners.forEach(listener=>{\r\n      try{\r\n        listener(event);\r\n      }catch(e){\r\n        log(e);\r\n      }\r\n    });\r\n  }\r\n\r\n  _onDispatchFaild(event){\r\n    this.dispatchFailedListener.forEach(listener=>{\r\n      try{\r\n        listener(event);\r\n      }catch(e){\r\n        log(e);\r\n      }\r\n    });\r\n  }\r\n\r\n  _onDispatched(event){\r\n    this.dispatchedListener.forEach(listener=>{\r\n      try{\r\n        listener(event);\r\n      }catch(e){\r\n        log(e);\r\n      }\r\n    });\r\n  }\r\n}\r\n"]}