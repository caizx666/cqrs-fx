{"version":3,"sources":["../src/register.js"],"names":["register","registry","eventhandler","commandhandler","domain","_registerHandler","_registerDomain","itemType","alias","indexOf","handlers","handlerConfig","config","get","merge","p","isString","array","items","item","module","push","messageType","trimRight"],"mappings":";;;;;;;;;;;QAkBiBA,Q,GAAAA,Q;;AAlBjB;;;;AAMO,IAAMC,8BAAW;AACtBC,gBAAc;AACZ;AADY,GADQ;AAItBC,kBAAgB,EAJM;AAOtBC,UAAQ;AAPc,CAAjB;;AAYA,SAAUJ,QAAV,GAAoB;AACxB;AACCK,mBAAiB,SAAjB;AACAA,mBAAiB,OAAjB;AACAC,kBAAgB,QAAhB;AACD;;AAEH,SAAUA,eAAV,CAA0BC,QAA1B,EAAoC;AAChC,MAAIH,SAASH,SAASG,MAAtB;AACA,MAAI,CAACA,MAAL,EAAa;AACb,OAAK,IAAII,MAAT,IAAkB,aAAOA,KAAzB,EAAgC;AAC9B,QAAIA,OAAMC,OAAN,CAAc,MAAMF,QAAN,GAAiB,GAA/B,CAAJ,EACEH,OAAOI,MAAP,IAAgBA,MAAhB;AACH;AACF;;AAEH,SAAUH,gBAAV,CAA2BE,QAA3B,EAAqC;AACjC,MAAIG,WAAWT,SAASM,WAAW,SAApB,CAAf;AACA,MAAIG,aAAa,IAAjB,EAAuB;AACrB;AACA,SAAK,IAAIF,OAAT,IAAkB,aAAOA,KAAzB,EAAgC;AAC9B,UAAIA,QAAMC,OAAN,CAAc,aAAWF,QAAX,GAAoB,SAAlC,KAAgD,CAAC,CAArD,EACE;AACF,UAAII,gBAAgBC,OAAOC,GAAP,CAAWN,WAAW,SAAtB,CAApB;AACAI,sBAAgBG,MAAMH,aAAN,EAAqB,oBAASH,OAAT,CAArB,CAAhB;AACA,WAAK,IAAIO,CAAT,IAAcJ,aAAd,EAA6B;AACzB,YAAI,CAACK,SAASD,CAAT,CAAL,EAAkB;AAClB,YAAIE,QAAQP,SAASK,CAAT,KAAe,EAA3B;AACA,YAAIG,QAAQP,cAAcI,CAAd,CAAZ;AAHyB;AAAA;AAAA;;AAAA;AAIzB,0DAAiBG,KAAjB,4GAAwB;AAAA,gBAAfC,IAAe;;AACtB,gBAAIF,MAAMR,OAAN,CAAcU,IAAd,IAAsB,CAAC,CAA3B,EACE;AACF;AACA,gBAAI,CAAC,aAAOX,KAAP,CAAgBY,MAAhB,SAA0Bb,QAA1B,SAAsCY,IAAtC,CAAL,EACE;AACF;AACAF,kBAAMI,IAAN,CAAWF,IAAX;AACD;AAZwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAazBT,iBAASK,CAAT,IAAcE,KAAd;AACH;AACF;AACD;AACA,SAAK,IAAIT,OAAT,IAAkB,aAAOA,KAAzB,EAAgC;AAC9B,UAAIA,QAAMC,OAAN,CAAc,MAAMF,QAAN,GAAiB,IAA/B,KAAwC,CAAC,CAA7C,EACE;AACF,UAAIe,cAAcd,QAAMe,SAAN,CAAgB,SAAhB,CAAlB;AACA,UAAIN,SAAQP,SAASY,WAAT,KAAyB,EAArC;AACA,UAAIL,OAAMR,OAAN,CAAcD,OAAd,IAAuB,CAAC,CAA5B,EACE;AACF;AACA;AACAS,aAAMI,IAAN,CAAWb,OAAX;AACAE,eAASY,WAAT,IAAwBL,MAAxB;AACD;AACF;AACF","file":"register.js","sourcesContent":["import {\r\n  fxData,\r\n  alias,\r\n  _require\r\n} from './core';\r\n\r\nexport const registry = {\r\n  eventhandler: {\r\n    // xxxevent: []\r\n  },\r\n  commandhandler: {\r\n\r\n  },\r\n  domain: {\r\n\r\n  }\r\n};\r\n\r\nexport function  register(){\r\n  \t// 注册处理器和domain对象\r\n    _registerHandler('command');\r\n    _registerHandler('event');\r\n    _registerDomain('domain');\r\n  }\r\n\r\nfunction  _registerDomain(itemType) {\r\n    let domain = registry.domain;\r\n    if (!domain) return;\r\n    for (let alias in fxData.alias) {\r\n      if (alias.indexOf('/' + itemType + '/'))\r\n        domain[alias] = alias;\r\n    }\r\n  }\r\n\r\nfunction  _registerHandler(itemType) {\r\n    let handlers = registry[itemType + 'handler'];\r\n    if (handlers !== null) {\r\n      // 先注册配置文件中定义的handler，配置文件中可以配置其他模块的handler\r\n      for (let alias in fxData.alias) {\r\n        if (alias.indexOf('/config/'+itemType+'handler') == -1)\r\n          continue;\r\n        let handlerConfig = config.get(itemType + 'handler');\r\n        handlerConfig = merge(handlerConfig, _require(alias));\r\n        for (let p in handlerConfig) {\r\n            if (!isString(p)) continue;\r\n            let array = handlers[p] || [];\r\n            let items = handlerConfig[p];\r\n            for (let item of items) {\r\n              if (array.indexOf(item) > -1)\r\n                continue;\r\n              // 如果handler文件不存在跳过\r\n              if (!fxData.alias[`${module}/${itemType}/${item}`])\r\n                continue;\r\n              // 注册\r\n              array.push(item);\r\n            }\r\n            handlers[p] = array;\r\n        }\r\n      }\r\n      // 补充默认handler文件夹中的handler\r\n      for (let alias in fxData.alias) {\r\n        if (alias.indexOf('/' + itemType + 's/') == -1)\r\n          continue;\r\n        let messageType = alias.trimRight('handler');\r\n        let array = handlers[messageType] || [];\r\n        if (array.indexOf(alias) > -1)\r\n          return;\r\n        // 要是已经在配置文件中注册，就不注册默认事件\r\n        // 注册\r\n        array.push(alias);\r\n        handlers[messageType] = array;\r\n      }\r\n    }\r\n  }\r\n"]}