{"version":3,"sources":["../../src/event/mysql_storage.js"],"names":["db","pool","_tableName","get","table","_addList","spec","resolve","reject","query","err","result","rows","fields","dto","push","getConnection","connection","beginTransaction","count","length","forEach","id","eventType","eventid","sourceid","data","version","branch","timestamp","rollback","release","clear","commit","log"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;;;;;;AAGE,oBAAa;AAAA;;AACX,SAAKA,EAAL,GAAU,gBAAMC,IAAhB;AACA,SAAKC,UAAL,GAAkB,iBAAOC,GAAP,CAAW,OAAX,EAAoBC,KAAtC;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACD;;;;0BAEKC,I,EAAK;AACT,aAAO,sBAAY,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AAC3C,aAAKR,EAAL,CAAQS,KAAR,CAAc,mCAAd,EACE,CAAC,KAAKP,UAAN,EAAkB,iBAAKI,IAAL,CAAlB,CADF,EACiC,UAASI,GAAT,EAAcC,MAAd,EAAsB;AACnD,cAAID,GAAJ,EAASF,OAAOE,GAAP;AACTH,kBAAQI,OAAO,CAAP,EAAU,CAAV,CAAR;AACH,SAJD;AAKD,OANM,CAAP;AAOD;;;2BAEML,I,EAAK;AACV,aAAO,sBAAY,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AAC3C,aAAKR,EAAL,CAAQS,KAAR,CAAc,sEAAd,EACE,CAAC,KAAKP,UAAN,EAAkB,iBAAKI,IAAL,CAAlB,CADF,EACiC,UAASI,GAAT,EAAcE,IAAd,EAAoBC,MAApB,EAA4B;AACzD,cAAIH,GAAJ,EAASF,OAAOE,GAAP;AACTH,kBAAQK,IAAR,EAAaC,MAAb;AACH,SAJD;AAKD,OANM,CAAP;AAOD;;;0BAEKC,G,EAAI;AACR,WAAKT,QAAL,CAAcU,IAAd,CAAmBD,GAAnB;AACD;;;6BAEO;AACN,aAAO,sBAAY,UAASP,OAAT,EAAkBC,MAAlB,EAA0B;AAC3C,aAAKR,EAAL,CAAQgB,aAAR,CAAsB,UAASN,GAAT,EAAcO,UAAd,EAA0B;AAC9CA,qBAAWC,gBAAX,CAA4B,UAASR,GAAT,EAAc;AACxC,gBAAIA,GAAJ,EAASF,OAAOE,GAAP;AACT,gBAAIS,QAAQ,KAAKd,QAAL,CAAce,MAA1B;AACA,iBAAKf,QAAL,CAAcgB,OAAd,CAAsB,UAASf,IAAT,EAAe;AACnCW,yBAAWR,KAAX,CAAiB,yGAAjB,EACE,CAAC,KAAKP,UAAN,EAAkBI,KAAKgB,EAAvB,EAA2BhB,KAAKiB,SAAhC,EAA2CjB,KAAKkB,OAAhD,EAA0DlB,KAAKmB,QAA/D,EAAyEnB,KAAKoB,IAA9E,EACGpB,KAAKqB,OADR,EACiBrB,KAAKsB,MADtB,EAC8BtB,KAAKuB,SADnC,CADF,EAEkD,UAASnB,GAAT,EAAc;AAC5D,oBAAIA,GAAJ,EAAS;AACP,yBAAOO,WAAWa,QAAX,CAAoB,YAAW;AACpCb,+BAAWc,OAAX;AACAvB,2BAAOE,GAAP;AACD,mBAHM,CAAP;AAID;AACDS;AACA,oBAAIA,UAAU,CAAd,EAAgB;AACd,uBAAKd,QAAL,CAAc2B,KAAd;AACAf,6BAAWgB,MAAX,CAAkB,UAASvB,GAAT,EAAc;AAC9BO,+BAAWc,OAAX;AACA,wBAAIrB,GAAJ,EAASF,OAAOE,GAAP;AACTwB,wBAAI,UAAJ;AACA3B;AACD,mBALD;AAMD;AACJ,eAnBD;AAoBD,aArBD;AAsBD,WAzBD;AA0BD,SA3BD;AA4BD,OA7BM,CAAP;AA8BD;;;+BAES;AACR,WAAKF,QAAL,CAAc2B,KAAd;AACD","file":"mysql_storage.js","sourcesContent":["import config from '../config';\r\nimport {expr} from '../utils';\r\nimport mysql from '../storage/mysql';\r\n\r\nexport default class{\r\n  constructor(){\r\n    this.db = mysql.pool;\r\n    this._tableName = config.get('event').table;\r\n    this._addList = [];\r\n  }\r\n\r\n  count(spec){\r\n    return new Promise(function(resolve, reject) {\r\n      this.db.query('select count(*) from ?? where ?? ',\r\n        [this._tableName, expr(spec)], function(err, result) {\r\n          if (err) reject(err);\r\n          resolve(result[0][0]);\r\n      });\r\n    });\r\n  }\r\n\r\n  select(spec){\r\n    return new Promise(function(resolve, reject) {\r\n      this.db.query('select name,id,data,timestamp from ?? where ?? order by version asc ',\r\n        [this._tableName, expr(spec)], function(err, rows, fields) {\r\n          if (err) reject(err);\r\n          resolve(rows,fields);\r\n      });\r\n    });\r\n  }\r\n\r\n  inert(dto){\r\n    this._addList.push(dto);\r\n  }\r\n\r\n  commit(){\r\n    return new Promise(function(resolve, reject) {\r\n      this.db.getConnection(function(err, connection) {\r\n        connection.beginTransaction(function(err) {\r\n          if (err) reject(err);\r\n          let count = this._addList.length;\r\n          this._addList.forEach(function(spec) {\r\n            connection.query('inert in to ?? (id, event_type,event_id,source_id,data,version,branch,timestamp) values (?,?,?,?,?,?,?)',\r\n              [this._tableName, spec.id, spec.eventType, spec.eventid , spec.sourceid, spec.data,\r\n                 spec.version, spec.branch, spec.timestamp ], function(err) {\r\n                if (err) {\r\n                  return connection.rollback(function() {\r\n                    connection.release();\r\n                    reject(err);\r\n                  });\r\n                }\r\n                count--;\r\n                if (count === 0){\r\n                  this._addList.clear();\r\n                  connection.commit(function(err) {\r\n                    connection.release();\r\n                    if (err) reject(err);\r\n                    log('保存领域事件完成');\r\n                    resolve();\r\n                  });\r\n                }\r\n            });\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  rollback(){\r\n    this._addList.clear();\r\n  }\r\n}\r\n"]}