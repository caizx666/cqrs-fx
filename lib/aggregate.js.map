{"version":3,"sources":["../src/aggregate.js"],"names":["DEFAULT_BRACH","DEFAULT_VERSION","aggregate","id","_version","_branch","_uncommittedEvents","_eventVersion","version","_domainEventHandlers","_id","Count","Clear","historicalEvents","de","_handleEvent","length","eventname","handlers","p","handler","snapshot","endWith","push","event","_getDomainEventHandlers","name","data","branch","aggregateRootID","doBuildFromSnapshot","item","hasOwnProperty","clear","doCreateSnapshot","timestamp","uuid","v1","value","alias","domain"],"mappings":"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","file":"aggregate.js","sourcesContent":["import register from './register';\r\nimport {\r\n  _require\r\n} from './core';\r\nimport err from './err';\r\nimport {\r\n  timestamp\r\n} from './utils';\r\n\r\nconst DEFAULT_BRACH = 0;\r\nconst DEFAULT_VERSION = 0;\r\n\r\nexport default class aggregate {\r\n  constructor(id) {\r\n    this._version = DEFAULT_VERSION;\r\n    this._branch = DEFAULT_BRACH;\r\n    this._uncommittedEvents = [];\r\n    this._eventVersion = this.version;\r\n    this._domainEventHandlers = {};\r\n    this._id = id || null;\r\n  }\r\n\r\n  // 获取聚合根对象类型\r\n  static get(name) {\r\n    let alias = register.domain[name];\r\n    if (!alias) return null;\r\n    return _require(alias);\r\n  }\r\n\r\n  get id() {\r\n    return this._id;\r\n  }\r\n\r\n  set id(value) {\r\n    this._id = value;\r\n  }\r\n\r\n  get uncommittedEvents() {\r\n    return this._uncommittedEvents;\r\n  }\r\n\r\n  get version() {\r\n    return this._version + this._uncommittedEvents.length;\r\n  }\r\n\r\n  get branch() {\r\n    return this._branch;\r\n  }\r\n\r\n  buildFromHistory(...historicalEvents) {\r\n    if (this._uncommittedEvents.Count() > 0)\r\n      this._uncommittedEvents.Clear();\r\n    for (let de of historicalEvents)\r\n      this._handleEvent(de);\r\n    this._version = historicalEvents[historicalEvents.length - 1].version;\r\n    this._eventVersion = this._version;\r\n  }\r\n\r\n  _getDomainEventHandlers(eventname) {\r\n    if (this._domainEventHandlers[eventname])\r\n      return this._domainEventHandlers[eventname];\r\n    let handlers = [];\r\n    for (var p in this) {\r\n      let handler = snapshot[p];\r\n      if ((!p.endWith('Event') && !p.endWith('Handler')) || typeof handler !== 'function')\r\n        continue;\r\n      handlers.push(handler);\r\n    }\r\n    this._domainEventHandlers[eventname] = handlers;\r\n    return handlers;\r\n  }\r\n\r\n  _handleEvent(event) {\r\n    let handlers = this._getDomainEventHandlers(event.name);\r\n    for (var handler of handlers) {\r\n      handler(event.data);\r\n    }\r\n  }\r\n\r\n  buildFromSnapshot(snapshot) {\r\n    this._branch = snapshot.branch;\r\n    this._version = snapshot.version;\r\n    this._id = snapshot.aggregateRootID;\r\n    if (this.doBuildFromSnapshot)\r\n      this.doBuildFromSnapshot(snapshot);\r\n    else {\r\n      for (var p in snapshot) {\r\n        let item = snapshot[p];\r\n        if (typeof item === 'function')\r\n          continue;\r\n        if (!this.hasOwnProperty(p))\r\n          continue;\r\n        this[p] = item;\r\n      }\r\n    }\r\n    this._uncommittedEvents.clear();\r\n  }\r\n\r\n  createSnapshot() {\r\n    let snapshot = {};\r\n    if (this.doCreateSnapshot) {\r\n      snapshot = this.doCreateSnapshot();\r\n    } else {\r\n      for (var p in this) {\r\n        let item = this[p];\r\n        if (typeof item === 'function')\r\n          continue;\r\n        snapshot[p] = item;\r\n      }\r\n    }\r\n    snapshot = snapshot || {};\r\n    snapshot.branch = this._branch;\r\n    snapshot.version = this._version;\r\n    snapshot.timestamp = timestamp();\r\n    snapshot.aggregateRootID = this._id;\r\n    return snapshot;\r\n  }\r\n\r\n  raise(name, data) {\r\n    let event;\r\n    if (typeof name === 'string') {\r\n      event = {\r\n        name,\r\n        data\r\n      };\r\n    } else {\r\n      event = name;\r\n    }\r\n    if (!event || !event.name)\r\n      return;\r\n    event.id = uuid.v1();\r\n    event.version = ++this._eventVersion;\r\n    event.branch = DEFAULT_BRACH;\r\n    event.timestamp = timestamp();\r\n    this._handleEvent(event);\r\n    this._uncommittedEvents().push(event);\r\n  }\r\n}\r\n"]}