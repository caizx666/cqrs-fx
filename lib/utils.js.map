{"version":3,"sources":["../src/utils.js"],"names":["getDirs","getFiles","safeRequire","timestamp","isArray","isFunction","isString","isNumber","isObject","expr","merge","uuid","isFile","statSync","file","isDir","isDirectory","log","console","msg","sep","normalize","join","apply","exists","existsSync","files","readdirSync","dirs","fi","push","_interopSafeRequire","obj","require","__esModule","default","isAbsolute","err","Date","now","value","Array","Object","prototype","toString","call","length","splice","propertyIsEnumerable","func","txt","parseValue","exprArray","name","opt","i","l","sepc","string","args","item","p","hasOwnProperty","concat"],"mappings":";;;;;;;;;;;;;;;;QAwBgBA,O,GAAAA,O;QAUAC,Q,GAAAA,Q;QAoBAC,W,GAAAA,W;QAkBAC,S,GAAAA,S;QAIAC,O,GAAAA,O;QAUAC,U,GAAAA,U;QAIAC,Q,GAAAA,Q;QAIAC,Q,GAAAA,Q;QAIAC,Q,GAAAA,Q;QAoBAC,I,GAAAA,I;QASAC,K,GAAAA,K;;AA/HhB;;;;AACA;;;;AACA;;;;;;AAEO,IAAMC,oCAAN;;AAEA,IAAMC,0BAAS,SAATA,MAAS,OAAQ;AAC5B,SAAO,aAAGC,QAAH,CAAYC,IAAZ,EAAkBF,MAAlB,EAAP;AACD,CAFM;AAGA,IAAMG,wBAAQ,SAARA,KAAQ,OAAQ;AAC3B,SAAO,aAAGF,QAAH,CAAYC,IAAZ,EAAkBE,WAAlB,EAAP;AACD,CAFM;AAGA,IAAMC,oBAAM,SAANA,GAAM,MAAO;AACxBC,UAAQD,GAAR,CAAYE,GAAZ;AACD,CAFM;AAGA,IAAMC,oBAAM,eAAKA,GAAjB;AACA,IAAMC,gCAAY,eAAKA,SAAvB;AACA,IAAMC,sBAAO,SAAPA,IAAO,GAAM;AACxB,SAAO,eAAKA,IAAL,CAAUC,KAAV,4BAAP;AACD,CAFM;AAGA,IAAMC,0BAAS,SAATA,MAAS,OAAQ;AAC5B,SAAO,aAAGC,UAAH,CAAcX,IAAd,CAAP;AACD,CAFM;;AAIA,SAASd,OAAT,CAAiBc,IAAjB,EAAuB;AAC5B,MAAIY,QAAQ,aAAGC,WAAH,CAAeb,IAAf,CAAZ;AACA,MAAIc,OAAO,EAAX;AAF4B;AAAA;AAAA;;AAAA;AAG5B,oDAAeF,KAAf,4GAAsB;AAAA,UAAbG,EAAa;;AACpB,UAAI,aAAGhB,QAAH,CAAY,eAAKS,IAAL,CAAUR,IAAV,EAAee,EAAf,CAAZ,EAAgCb,WAAhC,EAAJ,EACEY,KAAKE,IAAL,CAAUD,EAAV;AACH;AAN2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAO5B,SAAOD,IAAP;AACD;;AAEM,SAAS3B,QAAT,CAAkBa,IAAlB,EAAwB;AAC7B,MAAIc,OAAO,EAAX;AACA,MAAI,aAAGH,UAAH,CAAcX,IAAd,CAAJ,EAAwB;AACtB,QAAIY,QAAQ,aAAGC,WAAH,CAAeb,IAAf,CAAZ;AADsB;AAAA;AAAA;;AAAA;AAEtB,uDAAeY,KAAf,iHAAsB;AAAA,YAAbG,EAAa;;AACpB,YAAI,aAAGhB,QAAH,CAAY,eAAKS,IAAL,CAAUR,IAAV,EAAee,EAAf,CAAZ,EAAgCjB,MAAhC,EAAJ,EACEgB,KAAKE,IAAL,CAAUD,EAAV;AACH;AALqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMvB;AACD,SAAOD,IAAP;AACD;;AAED,IAAIG,sBAAsB,SAAtBA,mBAAsB,OAAQ;AAChC,MAAIC,MAAMC,QAAQnB,IAAR,CAAV;AACA,MAAIkB,OAAOA,IAAIE,UAAX,IAAyBF,IAAIG,OAAjC,EAA0C;AACxC,WAAOH,IAAIG,OAAX;AACD;AACD,SAAOH,GAAP;AACD,CAND;;AAQO,SAAS9B,WAAT,CAAqBY,IAArB,EAA2B;AAChC;AACA,MAAI,eAAKsB,UAAL,CAAgBtB,IAAhB,CAAJ,EAA2B;AACzB;AACA,QAAI,CAACF,OAAOE,IAAP,CAAL,EAAmB;AACjB,aAAO,IAAP;AACD;AACD;AACA,WAAOiB,oBAAoBjB,IAApB,CAAP;AACD;AACD,MAAI;AACF,WAAOiB,oBAAoBjB,IAApB,CAAP;AACD,GAFD,CAEE,OAAOuB,GAAP,EAAY;AACZpB,QAAIoB,GAAJ;AACD;AACD,SAAO,IAAP;AACD;;AAEM,SAASlC,SAAT,GAAqB;AAC1B,SAAOmC,KAAKC,GAAL,EAAP;AACD;;AAEM,SAASnC,OAAT,CAAiBoC,KAAjB,EAAwB;AAC7B,SAAQA,iBAAiBC,KAAjB,IACL,EAAED,iBAAiBE,MAAnB,KACEA,OAAOC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAAgCL,KAAhC,KAA2C,gBAD7C,IAEC,OAAOA,MAAMM,MAAb,IAAuB,QAAvB,IACA,OAAON,MAAMO,MAAb,IAAuB,WADvB,IAEA,OAAOP,MAAMQ,oBAAb,IAAqC,WAFrC,IAGA,CAACR,MAAMQ,oBAAN,CAA2B,QAA3B,CANL;AAOD;;AAEM,SAAS3C,UAAT,CAAoB4C,IAApB,EAA0B;AAC/B,SAAO,OAAOA,IAAP,KAAgB,UAAvB;AACD;;AAEM,SAAS3C,QAAT,CAAkB4C,GAAlB,EAAuB;AAC5B,SAAO,OAAOA,GAAP,KAAe,QAAtB;AACD;;AAEM,SAAS3C,QAAT,CAAkB2C,GAAlB,EAAuB;AAC5B,SAAO,OAAOA,GAAP,KAAe,QAAtB;AACD;;AAEM,SAAS1C,QAAT,CAAkB0C,GAAlB,EAAuB;AAC5B,SAAO,QAAOA,GAAP,uDAAOA,GAAP,OAAe,QAAtB;AACD;;AAED,IAAIC,aAAa,SAAbA,UAAa,CAAUC,SAAV,EAAqBC,IAArB,EAA2Bb,KAA3B,EAAkCc,GAAlC,EAAuC;AACtD,MAAId,UAAU,IAAd,EAAoB;AACpB,MAAIlC,SAASkC,KAAT,CAAJ,EAAqB;AACnBY,cAAUtB,IAAV,CAAkBuB,IAAlB,WAA2Bb,KAA3B;AACD,GAFD,MAEO,IAAIjC,SAASiC,KAAT,CAAJ,EAAqB;AAC1BY,cAAUtB,IAAV,CAAkBuB,IAAlB,SAA0Bb,KAA1B;AACD,GAFM,MAEA,IAAInC,WAAWmC,KAAX,CAAJ,EAAuB;AAC5BW,eAAWC,SAAX,EAAsBC,IAAtB,EAA4Bb,OAA5B,EAAqCc,GAArC;AACD,GAFM,MAEA,IAAIlD,QAAQoC,KAAR,CAAJ,EAAoB;AACzB,SAAK,IAAIe,IAAI,CAAR,EAAWC,IAAIhB,MAAMM,MAA1B,EAAkCS,IAAI,CAAJ,GAAQC,CAA1C,EAA6CD,KAAK,CAAlD,EAAqD;AACnD,UAAID,OAAMd,MAAM,CAAN,CAAV;AACAW,iBAAWC,SAAX,EAAsBC,IAAtB,EAA4Bb,MAAM,CAAN,CAA5B,EAAsCc,IAAtC;AACD;AACF;AACF,CAdD;;AAgBO,SAAS7C,IAAT,CAAcgD,IAAd,EAAoB;AACzB,MAAIL,YAAY,EAAhB;AACA,OAAK,IAAIC,IAAT,IAAiBI,IAAjB,EAAuB;AACrB,QAAIjB,QAAQiB,KAAKJ,IAAL,CAAZ;AACAF,eAAWC,SAAX,EAAsBC,IAAtB,EAA4Bb,KAA5B,EAAmC,GAAnC;AACD;AACD,SAAOkB,OAAOpC,IAAP,CAAY8B,SAAZ,EAAuB,OAAvB,CAAP;AACD;;AAEM,SAAS1C,KAAT,GAAuB;AAC5B,MAAIsB,MAAM,EAAV;;AAD4B,oCAAL2B,IAAK;AAALA,QAAK;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAE5B,qDAAgBA,IAAhB,iHAAqB;AAAA,UAAbC,IAAa;;AACnB,UAAI,CAACA,IAAL,EAAW;AADQ;AAAA;AAAA;;AAAA;AAEnB,yDAAaA,IAAb,iHAAkB;AAAA,cAAVC,CAAU;;AAChB,cAAID,KAAKE,cAAL,CAAoBD,CAApB,KAA0BD,KAAKC,CAAL,CAA9B,EAAsC;AACpC7B,gBAAI6B,CAAJ,IAAS,CAAC7B,IAAI6B,CAAJ,KAAU,EAAX,EAAeE,MAAf,CAAsBH,KAAKC,CAAL,CAAtB,CAAT;AACD;AACF;AANkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOpB;AAT2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAU5B,SAAO7B,GAAP;AACD","file":"utils.js","sourcesContent":["import path from 'path';\r\nimport fs from 'fs';\r\nimport nuuid from 'uuid';\r\n\r\nexport const uuid = nuuid;\r\n\r\nexport const isFile = file => {\r\n  return fs.statSync(file).isFile();\r\n};\r\nexport const isDir = file => {\r\n  return fs.statSync(file).isDirectory();\r\n};\r\nexport const log = msg => {\r\n  console.log(msg);\r\n};\r\nexport const sep = path.sep;\r\nexport const normalize = path.normalize;\r\nexport const join = () => {\r\n  return path.join.apply(path, arguments);\r\n};\r\nexport const exists = file => {\r\n  return fs.existsSync(file);\r\n};\r\n\r\nexport function getDirs(file) {\r\n  let files = fs.readdirSync(file);\r\n  let dirs = [];\r\n  for (var fi of files) {\r\n    if (fs.statSync(path.join(file,fi)).isDirectory())\r\n      dirs.push(fi);\r\n  }\r\n  return dirs;\r\n}\r\n\r\nexport function getFiles(file) {\r\n  let dirs = [];\r\n  if (fs.existsSync(file)){\r\n    let files = fs.readdirSync(file);\r\n    for (var fi of files) {\r\n      if (fs.statSync(path.join(file,fi)).isFile())\r\n        dirs.push(fi);\r\n    }\r\n  }\r\n  return dirs;\r\n}\r\n\r\nlet _interopSafeRequire = file => {\r\n  let obj = require(file);\r\n  if (obj && obj.__esModule && obj.default) {\r\n    return obj.default;\r\n  }\r\n  return obj;\r\n};\r\n\r\nexport function safeRequire(file) {\r\n  // absolute file path is not exist\r\n  if (path.isAbsolute(file)) {\r\n    //no need optimize, only invoked before service start\r\n    if (!isFile(file)) {\r\n      return null;\r\n    }\r\n    //when file is exist, require direct\r\n    return _interopSafeRequire(file);\r\n  }\r\n  try {\r\n    return _interopSafeRequire(file);\r\n  } catch (err) {\r\n    log(err);\r\n  }\r\n  return null;\r\n}\r\n\r\nexport function timestamp() {\r\n  return Date.now();\r\n}\r\n\r\nexport function isArray(value) {\r\n  return (value instanceof Array ||\r\n    (!(value instanceof Object) &&\r\n      (Object.prototype.toString.call((value)) == '[object Array]') ||\r\n      typeof value.length == 'number' &&\r\n      typeof value.splice != 'undefined' &&\r\n      typeof value.propertyIsEnumerable != 'undefined' &&\r\n      !value.propertyIsEnumerable('splice')));\r\n}\r\n\r\nexport function isFunction(func) {\r\n  return typeof func === 'function';\r\n}\r\n\r\nexport function isString(txt) {\r\n  return typeof txt === 'string';\r\n}\r\n\r\nexport function isNumber(txt) {\r\n  return typeof txt === 'number';\r\n}\r\n\r\nexport function isObject(txt) {\r\n  return typeof txt === 'object';\r\n}\r\n\r\nlet parseValue = function (exprArray, name, value, opt) {\r\n  if (value === null) return;\r\n  if (isString(value)) {\r\n    exprArray.push(`${name}='${value}'`);\r\n  } else if (isNumber(value)) {\r\n    exprArray.push(`${name}=${value}`);\r\n  } else if (isFunction(value)) {\r\n    parseValue(exprArray, name, value(), opt);\r\n  } else if (isArray(value)) {\r\n    for (let i = 0, l = value.length; i + 1 < l; i += 2) {\r\n      let opt = value[0];\r\n      parseValue(exprArray, name, value[1], opt);\r\n    }\r\n  }\r\n};\r\n\r\nexport function expr(sepc) {\r\n  let exprArray = [];\r\n  for (var name in sepc) {\r\n    var value = sepc[name];\r\n    parseValue(exprArray, name, value, '=');\r\n  }\r\n  return string.join(exprArray, ' and ');\r\n}\r\n\r\nexport function merge(...args){\r\n  let obj = {};\r\n  for(let item of args){\r\n    if (!item) continue;\r\n    for(let p of item){\r\n      if (item.hasOwnProperty(p) && item[p]){\r\n        obj[p] = (obj[p] || []).concat(item[p]);\r\n      }\r\n    }\r\n  }\r\n  return obj;\r\n}\r\n"]}